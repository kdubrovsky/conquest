* {
  padding: 0;
  margin: 0;
}

html {
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
}

a {
  color: inherit;
  text-decoration: none;
}

ul {
  list-style: none;
}

svg {
  display: block;
}

button {
  border-radius: 0;
  border-style: none;
  cursor: pointer;
}

body {
  background: #ffffff;
}

.content-zone {
  width: 1170px;
  margin: 0 auto;
  padding: 0 40;
  min-width: 1170px;
  outline: 1px solid blue;
}

section {
  outline: 1px solid red;
}

header {
  outline: 1px solid green;
}

footer {
  outline: 1px solid orange;
}

.main-menu__list {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: start;
  -ms-flex-pack: start;
  justify-content: flex-start;
  gap: 65px;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
}

.main-menu__item {
  font: 400 14px/20px "Roboto", sans-serif;
  letter-spacing: 0;
}

.main-menu__link:link,
.main-menu__link:visited {
  color: #555248;
}

.main-menu__link:hover {
  color: #d4b098;
}

.toolbar {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: start;
  -ms-flex-pack: start;
  justify-content: flex-start;
  gap: 20px;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
}

.toolbar__link:link,
.toolbar__link:visited {
  fill: #1b1a17;
}

.toolbar__link:hover {
  fill: #d4b098;
}

.toolbar__icon {
  width: 20px;
  height: 20px;
}

.header {
  display: flow-root;
}

.header__wrapper {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
  -ms-flex-pack: justify;
  justify-content: space-between;
  margin: 35px 0 30px 0;
}

.header__logo {
  width: 100px;
  height: 20px;
}

.header__logo img {
  display: block;
}

@supports (-webkit-appearance:none) {

}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9yZXNldC5zY3NzIiwibWFpbi5jc3MiLCJfZ2xvYmFsLnNjc3MiLCJfdmFyaWFibGVzLnNjc3MiLCJibG9ja3MvX21haW4tbWVudS5zY3NzIiwiX21peGlucy5zY3NzIiwiYmxvY2tzL190b29sYmFyLnNjc3MiLCJzZWN0aW9ucy9faGVhZGVyLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxVQUFBO0VBQ0EsU0FBQTtBQ0NKOztBREVBO0VBQ0ksOEJBQUE7VUFBQSxzQkFBQTtBQ0NKOztBREVBO0VBQ0ksY0FBQTtFQUNBLHFCQUFBO0FDQ0o7O0FERUE7RUFDSSxxQkFBQTtBQ0NKOztBREVBO0VBQ0ksY0FBQTtBQ0NKOztBREVBO0VBQ0ksZ0JBQUE7RUFDQSxrQkFBQTtFQUNBLGVBQUE7QUNDSjs7QUMxQkE7RUFDSSx5QkNXVTtBRmtCZDs7QUMxQkE7RUFDSSxhQzBDVztFRHpDWCxjQUFBO0VBQ0EsYUFBQTtFQUNBLGlCQ3VDVztFRHRDWCx1QkFBQTtBRDZCSjs7QUN4QkE7RUFDSSxzQkFBQTtBRDJCSjs7QUN4QkE7RUFDSSx3QkFBQTtBRDJCSjs7QUN4QkE7RUFDSSx5QkFBQTtBRDJCSjs7QUdqREk7RUNxQkEsb0JBQUE7RUFBQSxvQkFBQTtFQUFBLGFBQUE7RUFDQSx1QkFBQTtNQUFBLG9CQUFBO1VBQUEsMkJBQUE7RUFDQSxTRHRCNEI7RUN1QjVCLG1CQUFBO01BQUEsZUFBQTtBSmdDSjtBR3BESTtFQ0dJLGlDQUFBO0VBS0osZ0JEUCtCO0VDUS9CLGVEUm9DO0VDU3BDLGlCRFQwQztFQ1UxQyxpQkFYZ0I7QUoyRHBCO0FHdERRO0VBRUksY0RQSztBRjhEakI7QUdwRFE7RUFDSSxjRENhO0FGcUR6Qjs7QUt0RUE7RURzQkksb0JBQUE7RUFBQSxvQkFBQTtFQUFBLGFBQUE7RUFDQSx1QkFBQTtNQUFBLG9CQUFBO1VBQUEsMkJBQUE7RUFDQSxTQ3ZCd0I7RUR3QnhCLG1CQUFBO01BQUEsZUFBQTtBSm9ESjtBS3pFUTtFQUVJLGFISks7QUY4RWpCO0FLdkVRO0VBQ0ksYUhPYTtBRmtFekI7QUtyRUk7RUFDSSxXQUFBO0VBQ0EsWUFBQTtBTHVFUjs7QU12RkE7RUFDSSxrQkFBQTtBTjBGSjtBTXhGSTtFRjBCQSxvQkFBQTtFQUFBLG9CQUFBO0VBQUEsYUFBQTtFQUNBLHlCQUFBO01BQUEsc0JBQUE7VUFBQSw4QkFBQTtFRXpCSSxxQkFBQTtBTjJGUjtBTXhGSTtFQUNJLFlBQUE7RUFDQSxZQUFBO0FOMEZSO0FNeEZRO0VBQ0ksY0FBQTtBTjBGWjtBQUNBOztBQUVBIiwiZmlsZSI6Im1haW4uY3NzIiwic291cmNlc0NvbnRlbnQiOlsiKiB7XG4gICAgcGFkZGluZzogMDtcbiAgICBtYXJnaW46IDA7XG59XG5cbmh0bWwge1xuICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG59XG5cbmEge1xuICAgIGNvbG9yOiBpbmhlcml0O1xuICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbn1cblxudWwge1xuICAgIGxpc3Qtc3R5bGUtdHlwZTogbm9uZTtcbn1cblxuc3ZnIHtcbiAgICBkaXNwbGF5OiBibG9jaztcbn1cblxuYnV0dG9uIHtcbiAgICBib3JkZXItcmFkaXVzOiAwO1xuICAgIGJvcmRlci1zdHlsZTogbm9uZTtcbiAgICBjdXJzb3I6IHBvaW50ZXI7XG59XG4iLCIqIHtcbiAgcGFkZGluZzogMDtcbiAgbWFyZ2luOiAwO1xufVxuXG5odG1sIHtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbn1cblxuYSB7XG4gIGNvbG9yOiBpbmhlcml0O1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG59XG5cbnVsIHtcbiAgbGlzdC1zdHlsZS10eXBlOiBub25lO1xufVxuXG5zdmcge1xuICBkaXNwbGF5OiBibG9jaztcbn1cblxuYnV0dG9uIHtcbiAgYm9yZGVyLXJhZGl1czogMDtcbiAgYm9yZGVyLXN0eWxlOiBub25lO1xuICBjdXJzb3I6IHBvaW50ZXI7XG59XG5cbmJvZHkge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmZmZmO1xufVxuXG4uY29udGVudC16b25lIHtcbiAgd2lkdGg6IDExNzBweDtcbiAgbWFyZ2luOiAwIGF1dG87XG4gIHBhZGRpbmc6IDAgNDA7XG4gIG1pbi13aWR0aDogMTE3MHB4O1xuICBvdXRsaW5lOiAxcHggc29saWQgYmx1ZTtcbn1cblxuc2VjdGlvbiB7XG4gIG91dGxpbmU6IDFweCBzb2xpZCByZWQ7XG59XG5cbmhlYWRlciB7XG4gIG91dGxpbmU6IDFweCBzb2xpZCBncmVlbjtcbn1cblxuZm9vdGVyIHtcbiAgb3V0bGluZTogMXB4IHNvbGlkIG9yYW5nZTtcbn1cblxuLm1haW4tbWVudV9fbGlzdCB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGp1c3RpZnktY29udGVudDogZmxleC1zdGFydDtcbiAgZ2FwOiA2NXB4O1xuICBmbGV4LXdyYXA6IHdyYXA7XG59XG4ubWFpbi1tZW51X19pdGVtIHtcbiAgZm9udC1mYW1pbHk6IFwiUm9ib3RvXCIsIHNhbnMtc2VyaWY7XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG4gIGZvbnQtc2l6ZTogMTRweDtcbiAgbGluZS1oZWlnaHQ6IDIwcHg7XG4gIGxldHRlci1zcGFjaW5nOiAwO1xufVxuLm1haW4tbWVudV9fbGluazpsaW5rLCAubWFpbi1tZW51X19saW5rOnZpc2l0ZWQge1xuICBjb2xvcjogIzU1NTI0ODtcbn1cbi5tYWluLW1lbnVfX2xpbms6aG92ZXIge1xuICBjb2xvcjogI2Q0YjA5ODtcbn1cblxuLnRvb2xiYXIge1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtc3RhcnQ7XG4gIGdhcDogMjBweDtcbiAgZmxleC13cmFwOiB3cmFwO1xufVxuLnRvb2xiYXJfX2xpbms6bGluaywgLnRvb2xiYXJfX2xpbms6dmlzaXRlZCB7XG4gIGZpbGw6ICMxYjFhMTc7XG59XG4udG9vbGJhcl9fbGluazpob3ZlciB7XG4gIGZpbGw6ICNkNGIwOTg7XG59XG4udG9vbGJhcl9faWNvbiB7XG4gIHdpZHRoOiAyMHB4O1xuICBoZWlnaHQ6IDIwcHg7XG59XG5cbi5oZWFkZXIge1xuICBkaXNwbGF5OiBmbG93LXJvb3Q7XG59XG4uaGVhZGVyX193cmFwcGVyIHtcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICBtYXJnaW46IDM1cHggMCAzMHB4IDA7XG59XG4uaGVhZGVyX19sb2dvIHtcbiAgd2lkdGg6IDEwMHB4O1xuICBoZWlnaHQ6IDIwcHg7XG59XG4uaGVhZGVyX19sb2dvIGltZyB7XG4gIGRpc3BsYXk6IGJsb2NrO1xufVxuQHN1cHBvcnRzICgtd2Via2l0LWFwcGVhcmFuY2U6bm9uZSl7XG5cbn1cbiIsImJvZHkge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICRjb2xvcl93aGl0ZTtcbn1cblxuLmNvbnRlbnQtem9uZSB7XG4gICAgd2lkdGg6ICRzaXplX2NvbnRlbnQ7XG4gICAgbWFyZ2luOiAwIGF1dG87XG4gICAgcGFkZGluZzogMCA0MDtcbiAgICBtaW4td2lkdGg6ICRzaXplX2NvbnRlbnQ7XG4gICAgb3V0bGluZTogMXB4IHNvbGlkIGJsdWU7XG59XG5cbi8vIGRldiBvbmx5XG5cbnNlY3Rpb24ge1xuICAgIG91dGxpbmU6IDFweCBzb2xpZCByZWQ7XG59XG5cbmhlYWRlciB7XG4gICAgb3V0bGluZTogMXB4IHNvbGlkIGdyZWVuO1xufVxuXG5mb290ZXIge1xuICAgIG91dGxpbmU6IDFweCBzb2xpZCBvcmFuZ2U7XG59IiwiLy8gcHJpbWFyeSBjb2xvciBzaGFkZXNcblxuJGNvbG9yX21haW5fOTAwOiAjMWIxYTE3O1xuJGNvbG9yX21haW5fODAwOiAjMjYyNDIxO1xuJGNvbG9yX21haW5fNzAwOiAjNDQ0MjQwO1xuJGNvbG9yX21haW5fNjAwOiAjNTU1MjQ4O1xuJGNvbG9yX21haW5fNTAwOiAjNWM1YzUwO1xuJGNvbG9yX21haW5fNDAwOiAjOGI4MzcxO1xuJGNvbG9yX21haW5fMzAwOiAjYzRjMGI2O1xuJGNvbG9yX21haW5fMjAwOiAjZjdmNWVmO1xuJGNvbG9yX21haW5fMTAwOiAjZmRmZGZiO1xuXG4kY29sb3Jfd2hpdGU6ICNmZmZmZmY7XG5cbi8vIHNlY29uZGFyeSBjb2xvcnNcblxuJGNvbG9yX3NlY29uZGFyeV9saWdodDogI2U2YzhiNDtcbiRjb2xvcl9zZWNvbmRhcnlfbWVkaXVtOiAjZDRiMDk4O1xuXG4vLyBncmFkaWVudHNcblxuJGdyYWRpZW50X2NpcmNsZXNfMTogbGluZWFyLWdyYWRpZW50KFxuICAgIDg5LjYzZGVnLFxuICAgICNkNGIwOTggMC4zJSxcbiAgICByZ2JhKDIxMiwgMTc2LCAxNTIsIDApIDk5LjY3JVxuKTtcblxuJGdyYWRpZW50X2NpcmNsZXNfMjogbGluZWFyLWdyYWRpZW50KFxuICAgIDg5LjYzZGVnLFxuICAgICNlMmQwYzQgMC4zJSxcbiAgICByZ2JhKDIyNiwgMjA4LCAxOTYsIDApIDk5LjY3JVxuKTtcblxuJGdyYWRpZW50X2NpcmNsZXNfMzogbGluZWFyLWdyYWRpZW50KFxuICAgIDg5LjYzZGVnLFxuICAgICNlOWUzZDQgMC4zJSxcbiAgICByZ2JhKDIyNiwgMjA4LCAxOTYsIDApIDk5LjY3JVxuKTtcblxuJGdyYWRpZW50X2hlcm9fYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KFxuICAgIDE4MGRlZyxcbiAgICByZ2JhKDIzNCwgMjI3LCAyMTIsIDApIDAlLFxuICAgICNlYWUzZDQgMTAwJVxuKTtcblxuLy8gc2l6ZXNcblxuJHNpemVfY29udGVudDogMTE3MHB4O1xuIiwiLm1haW4tbWVudSB7XG4gICAgJl9fbGlzdCB7XG4gICAgICAgIEBpbmNsdWRlIHNldEZsZXhXaXRoR2FwKDY1cHgpO1xuICAgIH1cblxuICAgICZfX2l0ZW0ge1xuICAgICAgICBAaW5jbHVkZSBzZXRGb250KFwiUm9ib3RvXCIsIDQwMCwgMTRweCwgMjBweCk7XG4gICAgfVxuXG4gICAgJl9fbGluayB7XG4gICAgICAgICY6bGluayxcbiAgICAgICAgJjp2aXNpdGVkIHtcbiAgICAgICAgICAgIGNvbG9yOiAkY29sb3JfbWFpbl82MDA7XG4gICAgICAgIH1cblxuICAgICAgICAmOmhvdmVyIHtcbiAgICAgICAgICAgIGNvbG9yOiAkY29sb3Jfc2Vjb25kYXJ5X21lZGl1bTtcbiAgICAgICAgfVxuICAgIH1cbn1cbiIsIkBtaXhpbiBzZXRGb250KFxuICAgICRmb250TmFtZSxcbiAgICAkZm9udFdlaWdodCxcbiAgICAkZm9udFNpemUsXG4gICAgJGxpbmVIZWlnaHQsXG4gICAgJGxldHRlclNwYWNpbmc6IDBcbikge1xuICAgIEBpZiAkZm9udE5hbWUgPT0gXCJSb2JvdG9cIiB7XG4gICAgICAgIGZvbnQtZmFtaWx5OiAkZm9udE5hbWUsIHNhbnMtc2VyaWY7XG4gICAgfSBAZWxzZSB7XG4gICAgICAgIGZvbnQtZmFtaWx5OiAkZm9udE5hbWUsIHNlcmlmO1xuICAgIH1cblxuICAgIGZvbnQtd2VpZ2h0OiAkZm9udFdlaWdodDtcbiAgICBmb250LXNpemU6ICRmb250U2l6ZTtcbiAgICBsaW5lLWhlaWdodDogJGxpbmVIZWlnaHQ7XG4gICAgbGV0dGVyLXNwYWNpbmc6ICRsZXR0ZXJTcGFjaW5nO1xufVxuXG4vLyBGbGV4XG5cbkBtaXhpbiBzZXRGbGV4V2l0aEdhcCgkZ2FwOiBpbml0aWFsKSB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtc3RhcnQ7XG4gICAgZ2FwOiAkZ2FwO1xuICAgIGZsZXgtd3JhcDogd3JhcDtcbn1cblxuQG1peGluIHNldEZsZXhTcGFjZUJldHdlZW4ge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xufVxuXG5AbWl4aW4gc2V0RmxleENlbnRlcmVkUm93IHtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xufVxuIiwiLnRvb2xiYXIge1xuICAgIEBpbmNsdWRlIHNldEZsZXhXaXRoR2FwKDIwcHgpO1xuXG4gICAgJl9fbGluayB7XG4gICAgICAgICY6bGluayxcbiAgICAgICAgJjp2aXNpdGVkIHtcbiAgICAgICAgICAgIGZpbGw6ICRjb2xvcl9tYWluXzkwMDtcbiAgICAgICAgfVxuXG4gICAgICAgICY6aG92ZXIge1xuICAgICAgICAgICAgZmlsbDogJGNvbG9yX3NlY29uZGFyeV9tZWRpdW07XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAmX19pY29uIHtcbiAgICAgICAgd2lkdGg6IDIwcHg7XG4gICAgICAgIGhlaWdodDogMjBweDtcbiAgICB9XG59XG4iLCIuaGVhZGVyIHtcbiAgICBkaXNwbGF5OiBmbG93LXJvb3Q7XG5cbiAgICAmX193cmFwcGVyIHtcbiAgICAgICAgQGluY2x1ZGUgc2V0RmxleFNwYWNlQmV0d2VlbjtcbiAgICAgICAgbWFyZ2luOiAzNXB4IDAgMzBweCAwO1xuICAgIH1cblxuICAgICZfX2xvZ28ge1xuICAgICAgICB3aWR0aDogMTAwcHg7XG4gICAgICAgIGhlaWdodDogMjBweDtcblxuICAgICAgICBpbWcge1xuICAgICAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICAgIH1cbiAgICB9XG59XG4iXX0= */