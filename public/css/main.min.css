*{padding:0;margin:0}html{-webkit-box-sizing:border-box;box-sizing:border-box}a{color:inherit;text-decoration:none}ul{list-style:none}.header__logo img,svg{display:block}button{border-radius:0;border-style:none;cursor:pointer}body{background:#fff}.content-zone{width:1170px;margin:0 auto;padding:0 40;min-width:1170px;outline:1px solid #00f}section{outline:1px solid red}header{outline:1px solid green}footer{outline:1px solid orange}.main-menu__list{display:-webkit-box;display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;-webkit-box-pack:start;-ms-flex-pack:start;justify-content:flex-start;gap:65px}.main-menu__item{font:400 14px/20px "Roboto",sans-serif;letter-spacing:0}.main-menu__link:link,.main-menu__link:visited{color:#555248}.main-menu__link:hover{color:#d4b098}.toolbar{display:-webkit-box;display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;-webkit-box-pack:start;-ms-flex-pack:start;justify-content:flex-start;gap:20px}.toolbar__item{position:relative}.toolbar__link:link,.toolbar__link:visited{fill:#1b1a17}.toolbar__link:hover{fill:#d4b098}.toolbar__icon{width:20px;height:20px}.toolbar__counter{font:400 8px/11px "Roboto",sans-serif;background:#e6c8b4;position:absolute;top:-3px;right:-8px;letter-spacing:0;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;color:#1b1a17;border-radius:7px;height:13px;width:13px}.header{display:flow-root}.header__wrapper{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;margin:35px 0 30px}.header__logo{width:100px;height:20px}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9yZXNldC5zY3NzIiwibWFpbi5taW4uY3NzIiwiX2dsb2JhbC5zY3NzIiwiYmxvY2tzL19tYWluLW1lbnUuc2NzcyIsIl9taXhpbnMuc2NzcyIsIm1haW4uY3NzIiwiYmxvY2tzL190b29sYmFyLnNjc3MiLCJzZWN0aW9ucy9faGVhZGVyLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsQyxDQUNJLFMsQ0FDQSxRLENBR0osSSxDQUNJLDZCLENDQ0YscUIsQ0RFRixDLENBQ0ksYSxDQUNBLG9CLENBR0osRSxDQUNJLGUsQ0N1SUosaUIsQ0RwSUEsRyxDQUNJLGEsQ0FHSixNLENBQ0ksZSxDQUNBLGlCLENBQ0EsYyxDRXpCSixJLENBQ0ksZSxDQUdKLGEsQ0FDSSxZLENBQ0EsYSxDQUNBLFksQ0FDQSxnQixDQUNBLHNCLENBS0osTyxDQUNJLHFCLENBR0osTSxDQUNJLHVCLENBR0osTSxDQUNJLHdCLENDdEJBLGdCLENDcUJBLG1CLENBQUEsbUIsQ0FBQSxZLENBQ0Esa0IsQ0htQ0YsYyxDR2xDRSxzQixDSG9DRixtQixDQUNBLDBCLENHcENFLFEsQ0h3Q0osZ0IsQ0dwREksc0MsQ0FDQSxnQixDQ2tESixxQixDRnREUSx3QixDQUVJLGEsQ0YrRFosc0IsQ0lMQSxhLENKU0EsUSxDR3pESSxtQixDQUFBLG1CLENBQ0EsWSxDSDRERixrQixDRzNERSxjLENINkRGLHNCLENBQ0EsbUIsQ0c3REUsMEIsQ0NvREosUSxDQUdBLGMsQ0N4RVEsaUIsQ0FLQSxtQixDTG1GUixzQixDSVZBLFksQ0pjQSxvQixDSVZBLFksQ0pjQSxjLENLOUVRLFUsQ0ZsQkEsVyxDSHFHUixpQixDRzdGSSxxQyxDQXNCQSxrQixDQUFBLGlCLENBQUEsUSxDQUNBLFUsQ0g0RUYsZ0IsQ0FDQSxtQixDRzVFRSxtQixDSDhFRixZLENBQ0EsdUIsQ0sxRk0sb0IsQ0FDQSxzQixDQUNBLHdCLENBQ0EscUIsQ0FDQSxrQixDRDJFUixhLENKa0JFLGlCLENNOUhGLFcsQ0FDSSxVLENOa0lKLE8sQ0d0R0ksaUIsQ0gwR0osZ0IsQ0FDRSxtQixDTW5JTSxtQixDRmdIUixZLENFN0dJLHdCLENBQ0kscUIsQ0FDQSw2QixDRitHUixrQixDQUdBLGEsQ0FDQSxXLENKc0JFLFciLCJmaWxlIjoibWFpbi5taW4uY3NzIiwic291cmNlc0NvbnRlbnQiOlsiKiB7XG4gICAgcGFkZGluZzogMDtcbiAgICBtYXJnaW46IDA7XG59XG5cbmh0bWwge1xuICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG59XG5cbmEge1xuICAgIGNvbG9yOiBpbmhlcml0O1xuICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbn1cblxudWwge1xuICAgIGxpc3Qtc3R5bGUtdHlwZTogbm9uZTtcbn1cblxuc3ZnIHtcbiAgICBkaXNwbGF5OiBibG9jaztcbn1cblxuYnV0dG9uIHtcbiAgICBib3JkZXItcmFkaXVzOiAwO1xuICAgIGJvcmRlci1zdHlsZTogbm9uZTtcbiAgICBjdXJzb3I6IHBvaW50ZXI7XG59XG4iLCIqIHtcbiAgcGFkZGluZzogMDtcbiAgbWFyZ2luOiAwO1xufVxuXG5odG1sIHtcbiAgLXdlYmtpdC1ib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xufVxuXG5hIHtcbiAgY29sb3I6IGluaGVyaXQ7XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbn1cblxudWwge1xuICBsaXN0LXN0eWxlOiBub25lO1xufVxuXG5zdmcge1xuICBkaXNwbGF5OiBibG9jaztcbn1cblxuYnV0dG9uIHtcbiAgYm9yZGVyLXJhZGl1czogMDtcbiAgYm9yZGVyLXN0eWxlOiBub25lO1xuICBjdXJzb3I6IHBvaW50ZXI7XG59XG5cbmJvZHkge1xuICBiYWNrZ3JvdW5kOiAjZmZmZmZmO1xufVxuXG4uY29udGVudC16b25lIHtcbiAgd2lkdGg6IDExNzBweDtcbiAgbWFyZ2luOiAwIGF1dG87XG4gIHBhZGRpbmc6IDAgNDA7XG4gIG1pbi13aWR0aDogMTE3MHB4O1xuICBvdXRsaW5lOiAxcHggc29saWQgYmx1ZTtcbn1cblxuc2VjdGlvbiB7XG4gIG91dGxpbmU6IDFweCBzb2xpZCByZWQ7XG59XG5cbmhlYWRlciB7XG4gIG91dGxpbmU6IDFweCBzb2xpZCBncmVlbjtcbn1cblxuZm9vdGVyIHtcbiAgb3V0bGluZTogMXB4IHNvbGlkIG9yYW5nZTtcbn1cblxuLm1haW4tbWVudV9fbGlzdCB7XG4gIGRpc3BsYXk6IC13ZWJraXQtYm94O1xuICBkaXNwbGF5OiAtbXMtZmxleGJveDtcbiAgZGlzcGxheTogZmxleDtcbiAgLW1zLWZsZXgtd3JhcDogd3JhcDtcbiAgZmxleC13cmFwOiB3cmFwO1xuICAtd2Via2l0LWJveC1wYWNrOiBzdGFydDtcbiAgLW1zLWZsZXgtcGFjazogc3RhcnQ7XG4gIGp1c3RpZnktY29udGVudDogZmxleC1zdGFydDtcbiAgZ2FwOiA2NXB4O1xufVxuXG4ubWFpbi1tZW51X19pdGVtIHtcbiAgZm9udDogNDAwIDE0cHgvMjBweCBcIlJvYm90b1wiLCBzYW5zLXNlcmlmO1xuICBsZXR0ZXItc3BhY2luZzogMDtcbn1cblxuLm1haW4tbWVudV9fbGluazpsaW5rLFxuLm1haW4tbWVudV9fbGluazp2aXNpdGVkIHtcbiAgY29sb3I6ICM1NTUyNDg7XG59XG5cbi5tYWluLW1lbnVfX2xpbms6aG92ZXIge1xuICBjb2xvcjogI2Q0YjA5ODtcbn1cblxuLnRvb2xiYXIge1xuICBkaXNwbGF5OiAtd2Via2l0LWJveDtcbiAgZGlzcGxheTogLW1zLWZsZXhib3g7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIC1tcy1mbGV4LXdyYXA6IHdyYXA7XG4gIGZsZXgtd3JhcDogd3JhcDtcbiAgLXdlYmtpdC1ib3gtcGFjazogc3RhcnQ7XG4gIC1tcy1mbGV4LXBhY2s6IHN0YXJ0O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtc3RhcnQ7XG4gIGdhcDogMjBweDtcbn1cblxuLnRvb2xiYXJfX2l0ZW0ge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG59XG5cbi50b29sYmFyX19saW5rOmxpbmssXG4udG9vbGJhcl9fbGluazp2aXNpdGVkIHtcbiAgZmlsbDogIzFiMWExNztcbn1cblxuLnRvb2xiYXJfX2xpbms6aG92ZXIge1xuICBmaWxsOiAjZDRiMDk4O1xufVxuXG4udG9vbGJhcl9faWNvbiB7XG4gIHdpZHRoOiAyMHB4O1xuICBoZWlnaHQ6IDIwcHg7XG59XG5cbi50b29sYmFyX19jb3VudGVyIHtcbiAgZm9udDogNDAwIDhweC8xMXB4IFwiUm9ib3RvXCIsIHNhbnMtc2VyaWY7XG4gIGJhY2tncm91bmQ6ICNlNmM4YjQ7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiAtM3B4O1xuICByaWdodDogLThweDtcbiAgbGV0dGVyLXNwYWNpbmc6IDA7XG4gIGRpc3BsYXk6IC13ZWJraXQtYm94O1xuICBkaXNwbGF5OiAtbXMtZmxleGJveDtcbiAgZGlzcGxheTogZmxleDtcbiAgLXdlYmtpdC1ib3gtcGFjazogY2VudGVyO1xuICAtbXMtZmxleC1wYWNrOiBjZW50ZXI7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAtd2Via2l0LWJveC1hbGlnbjogY2VudGVyO1xuICAtbXMtZmxleC1hbGlnbjogY2VudGVyO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBjb2xvcjogIzFiMWExNztcbiAgYm9yZGVyLXJhZGl1czogN3B4O1xuICBoZWlnaHQ6IDEzcHg7XG4gIHdpZHRoOiAxM3B4O1xufVxuXG4uaGVhZGVyIHtcbiAgZGlzcGxheTogZmxvdy1yb290O1xufVxuXG4uaGVhZGVyX193cmFwcGVyIHtcbiAgZGlzcGxheTogLXdlYmtpdC1ib3g7XG4gIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xuICBkaXNwbGF5OiBmbGV4O1xuICAtd2Via2l0LWJveC1wYWNrOiBqdXN0aWZ5O1xuICAtbXMtZmxleC1wYWNrOiBqdXN0aWZ5O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gIG1hcmdpbjogMzVweCAwIDMwcHggMDtcbn1cblxuLmhlYWRlcl9fbG9nbyB7XG4gIHdpZHRoOiAxMDBweDtcbiAgaGVpZ2h0OiAyMHB4O1xufVxuXG4uaGVhZGVyX19sb2dvIGltZyB7XG4gIGRpc3BsYXk6IGJsb2NrO1xufVxuXG5Ac3VwcG9ydHMgKC13ZWJraXQtYXBwZWFyYW5jZTpub25lKSB7XG5cbn1cbi8qIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKemIzVnlZMlZ6SWpwYklsOXlaWE5sZEM1elkzTnpJaXdpYldGcGJpNWpjM01pTENKZloyeHZZbUZzTG5OamMzTWlMQ0pmZG1GeWFXRmliR1Z6TG5OamMzTWlMQ0ppYkc5amEzTXZYMjFoYVc0dGJXVnVkUzV6WTNOeklpd2lYMjFwZUdsdWN5NXpZM056SWl3aVlteHZZMnR6TDE5MGIyOXNZbUZ5TG5OamMzTWlMQ0p6WldOMGFXOXVjeTlmYUdWaFpHVnlMbk5qYzNNaVhTd2libUZ0WlhNaU9sdGRMQ0p0WVhCd2FXNW5jeUk2SWtGQlFVRTdSVUZEU1N4VlFVRkJPMFZCUTBFc1UwRkJRVHRCUTBOS096dEJSRVZCTzBWQlEwa3NPRUpCUVVFN1ZVRkJRU3h6UWtGQlFUdEJRME5LT3p0QlJFVkJPMFZCUTBrc1kwRkJRVHRGUVVOQkxIRkNRVUZCTzBGRFEwbzdPMEZFUlVFN1JVRkRTU3h4UWtGQlFUdEJRME5LT3p0QlJFVkJPMFZCUTBrc1kwRkJRVHRCUTBOS096dEJSRVZCTzBWQlEwa3NaMEpCUVVFN1JVRkRRU3hyUWtGQlFUdEZRVU5CTEdWQlFVRTdRVU5EU2pzN1FVTXhRa0U3UlVGRFNTeDVRa05YVlR0QlJtdENaRHM3UVVNeFFrRTdSVUZEU1N4aFF6QkRWenRGUkhwRFdDeGpRVUZCTzBWQlEwRXNZVUZCUVR0RlFVTkJMR2xDUTNWRFZ6dEZSSFJEV0N4MVFrRkJRVHRCUkRaQ1NqczdRVU40UWtFN1JVRkRTU3h6UWtGQlFUdEJSREpDU2pzN1FVTjRRa0U3UlVGRFNTeDNRa0ZCUVR0QlJESkNTanM3UVVONFFrRTdSVUZEU1N4NVFrRkJRVHRCUkRKQ1NqczdRVWRxUkVrN1JVTnhRa0VzYjBKQlFVRTdSVUZCUVN4dlFrRkJRVHRGUVVGQkxHRkJRVUU3UlVGRFFTeHRRa0ZCUVR0TlFVRkJMR1ZCUVVFN1JVRkRRU3gxUWtGQlFUdE5RVUZCTEc5Q1FVRkJPMVZCUVVFc01rSkJRVUU3UlVGRFFTeFRSSFpDTkVJN1FVaDFSR2hETzBGSGNFUkpPMFZEUjBrc2FVTkJRVUU3UlVGTFNpeG5Ra1JRSzBJN1JVTlJMMElzWlVSU2IwTTdSVU5UY0VNc2FVSkVWREJETzBWRFZURkRMR2xDUVZoblFqdEJTakpFY0VJN1FVZDBSRkU3UlVGRlNTeGpSRkJMTzBGR09FUnFRanRCUjNCRVVUdEZRVU5KTEdORVEyRTdRVVp4UkhwQ096dEJTM1JGUVR0RlJITkNTU3h2UWtGQlFUdEZRVUZCTEc5Q1FVRkJPMFZCUVVFc1lVRkJRVHRGUVVOQkxHMUNRVUZCTzAxQlFVRXNaVUZCUVR0RlFVTkJMSFZDUVVGQk8wMUJRVUVzYjBKQlFVRTdWVUZCUVN3eVFrRkJRVHRGUVVOQkxGTkRlRUozUWp0QlREUkZOVUk3UVVzeFJVazdSVUZEU1N4clFrRkJRVHRCVERSRlVqdEJTM2hGVVR0RlFVVkpMR0ZJVWtzN1FVWnBSbXBDTzBGTGRFVlJPMFZCUTBrc1lVaEhZVHRCUm5GRmVrSTdRVXR3UlVrN1JVRkRTU3hYUVVGQk8wVkJRMEVzV1VGQlFUdEJUSE5GVWp0QlMyNUZTVHRGUVVOSkxHdENRVUZCTzBWQlEwRXNVMEZCUVR0RlFVTkJMRmRCUVVFN1JVUnNRa0VzYVVOQlFVRTdSVUZMU2l4blFrTmpLMEk3UlVSaUwwSXNZME5oYjBNN1JVUmFjRU1zYVVKRFdYbERPMFZFV0hwRExHbENRVmhuUWp0RlFXbERhRUlzYjBKQlFVRTdSVUZCUVN4dlFrRkJRVHRGUVVGQkxHRkJRVUU3UlVGRFFTeDNRa0ZCUVR0TlFVRkJMSEZDUVVGQk8xVkJRVUVzZFVKQlFVRTdSVUZEUVN4NVFrRkJRVHROUVVGQkxITkNRVUZCTzFWQlFVRXNiVUpCUVVFN1JVTllTU3hqU0ROQ1V6dEZSelJDVkN4NVFraGtaMEk3UlVkbGFFSXNhMEpCUVVFN1JVRkRRU3haUVVGQk8wVkJRMEVzVjBGQlFUdEJUREpGVWpzN1FVMDFSMEU3UlVGRFNTeHJRa0ZCUVR0QlRpdEhTanRCVFRkSFNUdEZSakJDUVN4dlFrRkJRVHRGUVVGQkxHOUNRVUZCTzBWQlFVRXNZVUZCUVR0RlFVTkJMSGxDUVVGQk8wMUJRVUVzYzBKQlFVRTdWVUZCUVN3NFFrRkJRVHRGUlhwQ1NTeHhRa0ZCUVR0QlRtZElVanRCVFRkSFNUdEZRVU5KTEZsQlFVRTdSVUZEUVN4WlFVRkJPMEZPSzBkU08wRk5OMGRSTzBWQlEwa3NZMEZCUVR0QlRpdEhXanRCUVVOQk96dEJRVVZCSWl3aVptbHNaU0k2SW0xaGFXNHVZM056SWl3aWMyOTFjbU5sYzBOdmJuUmxiblFpT2xzaUtpQjdYRzRnSUNBZ2NHRmtaR2x1WnpvZ01EdGNiaUFnSUNCdFlYSm5hVzQ2SURBN1hHNTlYRzVjYm1oMGJXd2dlMXh1SUNBZ0lHSnZlQzF6YVhwcGJtYzZJR0p2Y21SbGNpMWliM2c3WEc1OVhHNWNibUVnZTF4dUlDQWdJR052Ykc5eU9pQnBibWhsY21sME8xeHVJQ0FnSUhSbGVIUXRaR1ZqYjNKaGRHbHZiam9nYm05dVpUdGNibjFjYmx4dWRXd2dlMXh1SUNBZ0lHeHBjM1F0YzNSNWJHVXRkSGx3WlRvZ2JtOXVaVHRjYm4xY2JseHVjM1puSUh0Y2JpQWdJQ0JrYVhOd2JHRjVPaUJpYkc5amF6dGNibjFjYmx4dVluVjBkRzl1SUh0Y2JpQWdJQ0JpYjNKa1pYSXRjbUZrYVhWek9pQXdPMXh1SUNBZ0lHSnZjbVJsY2kxemRIbHNaVG9nYm05dVpUdGNiaUFnSUNCamRYSnpiM0k2SUhCdmFXNTBaWEk3WEc1OVhHNGlMQ0lxSUh0Y2JpQWdjR0ZrWkdsdVp6b2dNRHRjYmlBZ2JXRnlaMmx1T2lBd08xeHVmVnh1WEc1b2RHMXNJSHRjYmlBZ1ltOTRMWE5wZW1sdVp6b2dZbTl5WkdWeUxXSnZlRHRjYm4xY2JseHVZU0I3WEc0Z0lHTnZiRzl5T2lCcGJtaGxjbWwwTzF4dUlDQjBaWGgwTFdSbFkyOXlZWFJwYjI0NklHNXZibVU3WEc1OVhHNWNiblZzSUh0Y2JpQWdiR2x6ZEMxemRIbHNaUzEwZVhCbE9pQnViMjVsTzF4dWZWeHVYRzV6ZG1jZ2UxeHVJQ0JrYVhOd2JHRjVPaUJpYkc5amF6dGNibjFjYmx4dVluVjBkRzl1SUh0Y2JpQWdZbTl5WkdWeUxYSmhaR2wxY3pvZ01EdGNiaUFnWW05eVpHVnlMWE4wZVd4bE9pQnViMjVsTzF4dUlDQmpkWEp6YjNJNklIQnZhVzUwWlhJN1hHNTlYRzVjYm1KdlpIa2dlMXh1SUNCaVlXTnJaM0p2ZFc1a0xXTnZiRzl5T2lBalptWm1abVptTzF4dWZWeHVYRzR1WTI5dWRHVnVkQzE2YjI1bElIdGNiaUFnZDJsa2RHZzZJREV4TnpCd2VEdGNiaUFnYldGeVoybHVPaUF3SUdGMWRHODdYRzRnSUhCaFpHUnBibWM2SURBZ05EQTdYRzRnSUcxcGJpMTNhV1IwYURvZ01URTNNSEI0TzF4dUlDQnZkWFJzYVc1bE9pQXhjSGdnYzI5c2FXUWdZbXgxWlR0Y2JuMWNibHh1YzJWamRHbHZiaUI3WEc0Z0lHOTFkR3hwYm1VNklERndlQ0J6YjJ4cFpDQnlaV1E3WEc1OVhHNWNibWhsWVdSbGNpQjdYRzRnSUc5MWRHeHBibVU2SURGd2VDQnpiMnhwWkNCbmNtVmxianRjYm4xY2JseHVabTl2ZEdWeUlIdGNiaUFnYjNWMGJHbHVaVG9nTVhCNElITnZiR2xrSUc5eVlXNW5aVHRjYm4xY2JseHVMbTFoYVc0dGJXVnVkVjlmYkdsemRDQjdYRzRnSUdScGMzQnNZWGs2SUdac1pYZzdYRzRnSUdac1pYZ3RkM0poY0RvZ2QzSmhjRHRjYmlBZ2FuVnpkR2xtZVMxamIyNTBaVzUwT2lCbWJHVjRMWE4wWVhKME8xeHVJQ0JuWVhBNklEWTFjSGc3WEc1OVhHNHViV0ZwYmkxdFpXNTFYMTlwZEdWdElIdGNiaUFnWm05dWRDMW1ZVzFwYkhrNklGd2lVbTlpYjNSdlhDSXNJSE5oYm5NdGMyVnlhV1k3WEc0Z0lHWnZiblF0ZDJWcFoyaDBPaUEwTURBN1hHNGdJR1p2Ym5RdGMybDZaVG9nTVRSd2VEdGNiaUFnYkdsdVpTMW9aV2xuYUhRNklESXdjSGc3WEc0Z0lHeGxkSFJsY2kxemNHRmphVzVuT2lBd08xeHVmVnh1TG0xaGFXNHRiV1Z1ZFY5ZmJHbHVhenBzYVc1ckxDQXViV0ZwYmkxdFpXNTFYMTlzYVc1ck9uWnBjMmwwWldRZ2UxeHVJQ0JqYjJ4dmNqb2dJelUxTlRJME9EdGNibjFjYmk1dFlXbHVMVzFsYm5WZlgyeHBibXM2YUc5MlpYSWdlMXh1SUNCamIyeHZjam9nSTJRMFlqQTVPRHRjYm4xY2JseHVMblJ2YjJ4aVlYSWdlMXh1SUNCa2FYTndiR0Y1T2lCbWJHVjRPMXh1SUNCbWJHVjRMWGR5WVhBNklIZHlZWEE3WEc0Z0lHcDFjM1JwWm5rdFkyOXVkR1Z1ZERvZ1pteGxlQzF6ZEdGeWREdGNiaUFnWjJGd09pQXlNSEI0TzF4dWZWeHVMblJ2YjJ4aVlYSmZYMmwwWlcwZ2UxeHVJQ0J3YjNOcGRHbHZiam9nY21Wc1lYUnBkbVU3WEc1OVhHNHVkRzl2YkdKaGNsOWZiR2x1YXpwc2FXNXJMQ0F1ZEc5dmJHSmhjbDlmYkdsdWF6cDJhWE5wZEdWa0lIdGNiaUFnWm1sc2JEb2dJekZpTVdFeE56dGNibjFjYmk1MGIyOXNZbUZ5WDE5c2FXNXJPbWh2ZG1WeUlIdGNiaUFnWm1sc2JEb2dJMlEwWWpBNU9EdGNibjFjYmk1MGIyOXNZbUZ5WDE5cFkyOXVJSHRjYmlBZ2QybGtkR2c2SURJd2NIZzdYRzRnSUdobGFXZG9kRG9nTWpCd2VEdGNibjFjYmk1MGIyOXNZbUZ5WDE5amIzVnVkR1Z5SUh0Y2JpQWdjRzl6YVhScGIyNDZJR0ZpYzI5c2RYUmxPMXh1SUNCMGIzQTZJQzB6Y0hnN1hHNGdJSEpwWjJoME9pQXRPSEI0TzF4dUlDQm1iMjUwTFdaaGJXbHNlVG9nWENKU2IySnZkRzljSWl3Z2MyRnVjeTF6WlhKcFpqdGNiaUFnWm05dWRDMTNaV2xuYUhRNklEUXdNRHRjYmlBZ1ptOXVkQzF6YVhwbE9pQTRjSGc3WEc0Z0lHeHBibVV0YUdWcFoyaDBPaUF4TVhCNE8xeHVJQ0JzWlhSMFpYSXRjM0JoWTJsdVp6b2dNRHRjYmlBZ1pHbHpjR3hoZVRvZ1pteGxlRHRjYmlBZ2FuVnpkR2xtZVMxamIyNTBaVzUwT2lCalpXNTBaWEk3WEc0Z0lHRnNhV2R1TFdsMFpXMXpPaUJqWlc1MFpYSTdYRzRnSUdOdmJHOXlPaUFqTVdJeFlURTNPMXh1SUNCaVlXTnJaM0p2ZFc1a0xXTnZiRzl5T2lBalpUWmpPR0kwTzF4dUlDQmliM0prWlhJdGNtRmthWFZ6T2lBM2NIZzdYRzRnSUdobGFXZG9kRG9nTVROd2VEdGNiaUFnZDJsa2RHZzZJREV6Y0hnN1hHNTlYRzVjYmk1b1pXRmtaWElnZTF4dUlDQmthWE53YkdGNU9pQm1iRzkzTFhKdmIzUTdYRzU5WEc0dWFHVmhaR1Z5WDE5M2NtRndjR1Z5SUh0Y2JpQWdaR2x6Y0d4aGVUb2dabXhsZUR0Y2JpQWdhblZ6ZEdsbWVTMWpiMjUwWlc1ME9pQnpjR0ZqWlMxaVpYUjNaV1Z1TzF4dUlDQnRZWEpuYVc0NklETTFjSGdnTUNBek1IQjRJREE3WEc1OVhHNHVhR1ZoWkdWeVgxOXNiMmR2SUh0Y2JpQWdkMmxrZEdnNklERXdNSEI0TzF4dUlDQm9aV2xuYUhRNklESXdjSGc3WEc1OVhHNHVhR1ZoWkdWeVgxOXNiMmR2SUdsdFp5QjdYRzRnSUdScGMzQnNZWGs2SUdKc2IyTnJPMXh1ZlZ4dVFITjFjSEJ2Y25SeklDZ3RkMlZpYTJsMExXRndjR1ZoY21GdVkyVTZibTl1WlNsN1hHNWNibjFjYmlJc0ltSnZaSGtnZTF4dUlDQWdJR0poWTJ0bmNtOTFibVF0WTI5c2IzSTZJQ1JqYjJ4dmNsOTNhR2wwWlR0Y2JuMWNibHh1TG1OdmJuUmxiblF0ZW05dVpTQjdYRzRnSUNBZ2QybGtkR2c2SUNSemFYcGxYMk52Ym5SbGJuUTdYRzRnSUNBZ2JXRnlaMmx1T2lBd0lHRjFkRzg3WEc0Z0lDQWdjR0ZrWkdsdVp6b2dNQ0EwTUR0Y2JpQWdJQ0J0YVc0dGQybGtkR2c2SUNSemFYcGxYMk52Ym5SbGJuUTdYRzRnSUNBZ2IzVjBiR2x1WlRvZ01YQjRJSE52Ykdsa0lHSnNkV1U3WEc1OVhHNWNiaTh2SUdSbGRpQnZibXg1WEc1Y2JuTmxZM1JwYjI0Z2UxeHVJQ0FnSUc5MWRHeHBibVU2SURGd2VDQnpiMnhwWkNCeVpXUTdYRzU5WEc1Y2JtaGxZV1JsY2lCN1hHNGdJQ0FnYjNWMGJHbHVaVG9nTVhCNElITnZiR2xrSUdkeVpXVnVPMXh1ZlZ4dVhHNW1iMjkwWlhJZ2UxeHVJQ0FnSUc5MWRHeHBibVU2SURGd2VDQnpiMnhwWkNCdmNtRnVaMlU3WEc1OUlpd2lMeThnY0hKcGJXRnllU0JqYjJ4dmNpQnphR0ZrWlhOY2JseHVKR052Ykc5eVgyMWhhVzVmT1RBd09pQWpNV0l4WVRFM08xeHVKR052Ykc5eVgyMWhhVzVmT0RBd09pQWpNall5TkRJeE8xeHVKR052Ykc5eVgyMWhhVzVmTnpBd09pQWpORFEwTWpRd08xeHVKR052Ykc5eVgyMWhhVzVmTmpBd09pQWpOVFUxTWpRNE8xeHVKR052Ykc5eVgyMWhhVzVmTlRBd09pQWpOV00xWXpVd08xeHVKR052Ykc5eVgyMWhhVzVmTkRBd09pQWpPR0k0TXpjeE8xeHVKR052Ykc5eVgyMWhhVzVmTXpBd09pQWpZelJqTUdJMk8xeHVKR052Ykc5eVgyMWhhVzVmTWpBd09pQWpaamRtTldWbU8xeHVKR052Ykc5eVgyMWhhVzVmTVRBd09pQWpabVJtWkdaaU8xeHVYRzRrWTI5c2IzSmZkMmhwZEdVNklDTm1abVptWm1ZN1hHNWNiaTh2SUhObFkyOXVaR0Z5ZVNCamIyeHZjbk5jYmx4dUpHTnZiRzl5WDNObFkyOXVaR0Z5ZVY5c2FXZG9kRG9nSTJVMll6aGlORHRjYmlSamIyeHZjbDl6WldOdmJtUmhjbmxmYldWa2FYVnRPaUFqWkRSaU1EazRPMXh1WEc0dkx5Qm5jbUZrYVdWdWRITmNibHh1SkdkeVlXUnBaVzUwWDJOcGNtTnNaWE5mTVRvZ2JHbHVaV0Z5TFdkeVlXUnBaVzUwS0Z4dUlDQWdJRGc1TGpZelpHVm5MRnh1SUNBZ0lDTmtOR0l3T1RnZ01DNHpKU3hjYmlBZ0lDQnlaMkpoS0RJeE1pd2dNVGMyTENBeE5USXNJREFwSURrNUxqWTNKVnh1S1R0Y2JseHVKR2R5WVdScFpXNTBYMk5wY21Oc1pYTmZNam9nYkdsdVpXRnlMV2R5WVdScFpXNTBLRnh1SUNBZ0lEZzVMall6WkdWbkxGeHVJQ0FnSUNObE1tUXdZelFnTUM0ekpTeGNiaUFnSUNCeVoySmhLREl5Tml3Z01qQTRMQ0F4T1RZc0lEQXBJRGs1TGpZM0pWeHVLVHRjYmx4dUpHZHlZV1JwWlc1MFgyTnBjbU5zWlhOZk16b2diR2x1WldGeUxXZHlZV1JwWlc1MEtGeHVJQ0FnSURnNUxqWXpaR1ZuTEZ4dUlDQWdJQ05sT1dVelpEUWdNQzR6SlN4Y2JpQWdJQ0J5WjJKaEtESXlOaXdnTWpBNExDQXhPVFlzSURBcElEazVMalkzSlZ4dUtUdGNibHh1SkdkeVlXUnBaVzUwWDJobGNtOWZZbUZqYTJkeWIzVnVaRG9nYkdsdVpXRnlMV2R5WVdScFpXNTBLRnh1SUNBZ0lERTRNR1JsWnl4Y2JpQWdJQ0J5WjJKaEtESXpOQ3dnTWpJM0xDQXlNVElzSURBcElEQWxMRnh1SUNBZ0lDTmxZV1V6WkRRZ01UQXdKVnh1S1R0Y2JseHVMeThnYzJsNlpYTmNibHh1SkhOcGVtVmZZMjl1ZEdWdWREb2dNVEUzTUhCNE8xeHVJaXdpTG0xaGFXNHRiV1Z1ZFNCN1hHNGdJQ0FnSmw5ZmJHbHpkQ0I3WEc0Z0lDQWdJQ0FnSUVCcGJtTnNkV1JsSUhObGRFWnNaWGhYYVhSb1IyRndLRFkxY0hncE8xeHVJQ0FnSUgxY2JseHVJQ0FnSUNaZlgybDBaVzBnZTF4dUlDQWdJQ0FnSUNCQWFXNWpiSFZrWlNCelpYUkdiMjUwS0Z3aVVtOWliM1J2WENJc0lEUXdNQ3dnTVRSd2VDd2dNakJ3ZUNrN1hHNGdJQ0FnZlZ4dVhHNGdJQ0FnSmw5ZmJHbHVheUI3WEc0Z0lDQWdJQ0FnSUNZNmJHbHVheXhjYmlBZ0lDQWdJQ0FnSmpwMmFYTnBkR1ZrSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJR052Ykc5eU9pQWtZMjlzYjNKZmJXRnBibDgyTURBN1hHNGdJQ0FnSUNBZ0lIMWNibHh1SUNBZ0lDQWdJQ0FtT21odmRtVnlJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lHTnZiRzl5T2lBa1kyOXNiM0pmYzJWamIyNWtZWEo1WDIxbFpHbDFiVHRjYmlBZ0lDQWdJQ0FnZlZ4dUlDQWdJSDFjYm4xY2JpSXNJa0J0YVhocGJpQnpaWFJHYjI1MEtGeHVJQ0FnSUNSbWIyNTBUbUZ0WlN4Y2JpQWdJQ0FrWm05dWRGZGxhV2RvZEN4Y2JpQWdJQ0FrWm05dWRGTnBlbVVzWEc0Z0lDQWdKR3hwYm1WSVpXbG5hSFFzWEc0Z0lDQWdKR3hsZEhSbGNsTndZV05wYm1jNklEQmNiaWtnZTF4dUlDQWdJRUJwWmlBa1ptOXVkRTVoYldVZ1BUMGdYQ0pTYjJKdmRHOWNJaUI3WEc0Z0lDQWdJQ0FnSUdadmJuUXRabUZ0YVd4NU9pQWtabTl1ZEU1aGJXVXNJSE5oYm5NdGMyVnlhV1k3WEc0Z0lDQWdmU0JBWld4elpTQjdYRzRnSUNBZ0lDQWdJR1p2Ym5RdFptRnRhV3g1T2lBa1ptOXVkRTVoYldVc0lITmxjbWxtTzF4dUlDQWdJSDFjYmx4dUlDQWdJR1p2Ym5RdGQyVnBaMmgwT2lBa1ptOXVkRmRsYVdkb2REdGNiaUFnSUNCbWIyNTBMWE5wZW1VNklDUm1iMjUwVTJsNlpUdGNiaUFnSUNCc2FXNWxMV2hsYVdkb2REb2dKR3hwYm1WSVpXbG5hSFE3WEc0Z0lDQWdiR1YwZEdWeUxYTndZV05wYm1jNklDUnNaWFIwWlhKVGNHRmphVzVuTzF4dWZWeHVYRzR2THlCR2JHVjRYRzVjYmtCdGFYaHBiaUJ6WlhSR2JHVjRWMmwwYUVkaGNDZ2taMkZ3T2lCcGJtbDBhV0ZzS1NCN1hHNGdJQ0FnWkdsemNHeGhlVG9nWm14bGVEdGNiaUFnSUNCbWJHVjRMWGR5WVhBNklIZHlZWEE3WEc0Z0lDQWdhblZ6ZEdsbWVTMWpiMjUwWlc1ME9pQm1iR1Y0TFhOMFlYSjBPMXh1SUNBZ0lHZGhjRG9nSkdkaGNEdGNibjFjYmx4dVFHMXBlR2x1SUhObGRFWnNaWGhUY0dGalpVSmxkSGRsWlc0Z2UxeHVJQ0FnSUdScGMzQnNZWGs2SUdac1pYZzdYRzRnSUNBZ2FuVnpkR2xtZVMxamIyNTBaVzUwT2lCemNHRmpaUzFpWlhSM1pXVnVPMXh1ZlZ4dVhHNUFiV2w0YVc0Z2MyVjBSbXhsZUVObGJuUmxjbVZrVW05M0lIdGNiaUFnSUNCaGJHbG5iaTFwZEdWdGN6b2dZMlZ1ZEdWeU8xeHVmVnh1WEc1QWJXbDRhVzRnYzJWMFJteGxlRU5sYm5SbGNpQjdYRzRnSUNBZ1pHbHpjR3hoZVRvZ1pteGxlRHRjYmlBZ0lDQnFkWE4wYVdaNUxXTnZiblJsYm5RNklHTmxiblJsY2p0Y2JpQWdJQ0JoYkdsbmJpMXBkR1Z0Y3pvZ1kyVnVkR1Z5TzF4dWZWeHVJaXdpTG5SdmIyeGlZWElnZTF4dUlDQWdJRUJwYm1Oc2RXUmxJSE5sZEVac1pYaFhhWFJvUjJGd0tESXdjSGdwTzF4dVhHNGdJQ0FnSmw5ZmFYUmxiU0I3WEc0Z0lDQWdJQ0FnSUhCdmMybDBhVzl1T2lCeVpXeGhkR2wyWlR0Y2JpQWdJQ0I5WEc1Y2JpQWdJQ0FtWDE5c2FXNXJJSHRjYmlBZ0lDQWdJQ0FnSmpwc2FXNXJMRnh1SUNBZ0lDQWdJQ0FtT25acGMybDBaV1FnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdabWxzYkRvZ0pHTnZiRzl5WDIxaGFXNWZPVEF3TzF4dUlDQWdJQ0FnSUNCOVhHNWNiaUFnSUNBZ0lDQWdKanBvYjNabGNpQjdYRzRnSUNBZ0lDQWdJQ0FnSUNCbWFXeHNPaUFrWTI5c2IzSmZjMlZqYjI1a1lYSjVYMjFsWkdsMWJUdGNiaUFnSUNBZ0lDQWdmVnh1SUNBZ0lIMWNibHh1SUNBZ0lDWmZYMmxqYjI0Z2UxeHVJQ0FnSUNBZ0lDQjNhV1IwYURvZ01qQndlRHRjYmlBZ0lDQWdJQ0FnYUdWcFoyaDBPaUF5TUhCNE8xeHVJQ0FnSUgxY2JseHVJQ0FnSUNaZlgyTnZkVzUwWlhJZ2UxeHVJQ0FnSUNBZ0lDQndiM05wZEdsdmJqb2dZV0p6YjJ4MWRHVTdYRzRnSUNBZ0lDQWdJSFJ2Y0RvZ0xUTndlRHRjYmlBZ0lDQWdJQ0FnY21sbmFIUTZJQzA0Y0hnN1hHNGdJQ0FnSUNBZ0lFQnBibU5zZFdSbElITmxkRVp2Ym5Rb1hDSlNiMkp2ZEc5Y0lpd2dOREF3TENBNGNIZ3NJREV4Y0hncE8xeHVJQ0FnSUNBZ0lDQkFhVzVqYkhWa1pTQnpaWFJHYkdWNFEyVnVkR1Z5TzF4dUlDQWdJQ0FnSUNCamIyeHZjam9nSkdOdmJHOXlYMjFoYVc1Zk9UQXdPMXh1SUNBZ0lDQWdJQ0JpWVdOclozSnZkVzVrTFdOdmJHOXlPaUFrWTI5c2IzSmZjMlZqYjI1a1lYSjVYMnhwWjJoME8xeHVJQ0FnSUNBZ0lDQmliM0prWlhJdGNtRmthWFZ6T2lBM2NIZzdYRzRnSUNBZ0lDQWdJR2hsYVdkb2REb2dNVE53ZUR0Y2JpQWdJQ0FnSUNBZ2QybGtkR2c2SURFemNIZzdYRzRnSUNBZ2ZWeHVmVnh1SWl3aUxtaGxZV1JsY2lCN1hHNGdJQ0FnWkdsemNHeGhlVG9nWm14dmR5MXliMjkwTzF4dVhHNGdJQ0FnSmw5ZmQzSmhjSEJsY2lCN1hHNGdJQ0FnSUNBZ0lFQnBibU5zZFdSbElITmxkRVpzWlhoVGNHRmpaVUpsZEhkbFpXNDdYRzRnSUNBZ0lDQWdJRzFoY21kcGJqb2dNelZ3ZUNBd0lETXdjSGdnTUR0Y2JpQWdJQ0I5WEc1Y2JpQWdJQ0FtWDE5c2IyZHZJSHRjYmlBZ0lDQWdJQ0FnZDJsa2RHZzZJREV3TUhCNE8xeHVJQ0FnSUNBZ0lDQm9aV2xuYUhRNklESXdjSGc3WEc1Y2JpQWdJQ0FnSUNBZ2FXMW5JSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lHUnBjM0JzWVhrNklHSnNiMk5yTzF4dUlDQWdJQ0FnSUNCOVhHNGdJQ0FnZlZ4dWZWeHVJbDE5ICovIiwiYm9keSB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogJGNvbG9yX3doaXRlO1xufVxuXG4uY29udGVudC16b25lIHtcbiAgICB3aWR0aDogJHNpemVfY29udGVudDtcbiAgICBtYXJnaW46IDAgYXV0bztcbiAgICBwYWRkaW5nOiAwIDQwO1xuICAgIG1pbi13aWR0aDogJHNpemVfY29udGVudDtcbiAgICBvdXRsaW5lOiAxcHggc29saWQgYmx1ZTtcbn1cblxuLy8gZGV2IG9ubHlcblxuc2VjdGlvbiB7XG4gICAgb3V0bGluZTogMXB4IHNvbGlkIHJlZDtcbn1cblxuaGVhZGVyIHtcbiAgICBvdXRsaW5lOiAxcHggc29saWQgZ3JlZW47XG59XG5cbmZvb3RlciB7XG4gICAgb3V0bGluZTogMXB4IHNvbGlkIG9yYW5nZTtcbn0iLCIubWFpbi1tZW51IHtcbiAgICAmX19saXN0IHtcbiAgICAgICAgQGluY2x1ZGUgc2V0RmxleFdpdGhHYXAoNjVweCk7XG4gICAgfVxuXG4gICAgJl9faXRlbSB7XG4gICAgICAgIEBpbmNsdWRlIHNldEZvbnQoXCJSb2JvdG9cIiwgNDAwLCAxNHB4LCAyMHB4KTtcbiAgICB9XG5cbiAgICAmX19saW5rIHtcbiAgICAgICAgJjpsaW5rLFxuICAgICAgICAmOnZpc2l0ZWQge1xuICAgICAgICAgICAgY29sb3I6ICRjb2xvcl9tYWluXzYwMDtcbiAgICAgICAgfVxuXG4gICAgICAgICY6aG92ZXIge1xuICAgICAgICAgICAgY29sb3I6ICRjb2xvcl9zZWNvbmRhcnlfbWVkaXVtO1xuICAgICAgICB9XG4gICAgfVxufVxuIiwiQG1peGluIHNldEZvbnQoXG4gICAgJGZvbnROYW1lLFxuICAgICRmb250V2VpZ2h0LFxuICAgICRmb250U2l6ZSxcbiAgICAkbGluZUhlaWdodCxcbiAgICAkbGV0dGVyU3BhY2luZzogMFxuKSB7XG4gICAgQGlmICRmb250TmFtZSA9PSBcIlJvYm90b1wiIHtcbiAgICAgICAgZm9udC1mYW1pbHk6ICRmb250TmFtZSwgc2Fucy1zZXJpZjtcbiAgICB9IEBlbHNlIHtcbiAgICAgICAgZm9udC1mYW1pbHk6ICRmb250TmFtZSwgc2VyaWY7XG4gICAgfVxuXG4gICAgZm9udC13ZWlnaHQ6ICRmb250V2VpZ2h0O1xuICAgIGZvbnQtc2l6ZTogJGZvbnRTaXplO1xuICAgIGxpbmUtaGVpZ2h0OiAkbGluZUhlaWdodDtcbiAgICBsZXR0ZXItc3BhY2luZzogJGxldHRlclNwYWNpbmc7XG59XG5cbi8vIEZsZXhcblxuQG1peGluIHNldEZsZXhXaXRoR2FwKCRnYXA6IGluaXRpYWwpIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtd3JhcDogd3JhcDtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtc3RhcnQ7XG4gICAgZ2FwOiAkZ2FwO1xufVxuXG5AbWl4aW4gc2V0RmxleFNwYWNlQmV0d2VlbiB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG59XG5cbkBtaXhpbiBzZXRGbGV4Q2VudGVyZWRSb3cge1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG59XG5cbkBtaXhpbiBzZXRGbGV4Q2VudGVyIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG59XG4iLCIqIHtcbiAgcGFkZGluZzogMDtcbiAgbWFyZ2luOiAwO1xufVxuXG5odG1sIHtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbn1cblxuYSB7XG4gIGNvbG9yOiBpbmhlcml0O1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG59XG5cbnVsIHtcbiAgbGlzdC1zdHlsZS10eXBlOiBub25lO1xufVxuXG5zdmcge1xuICBkaXNwbGF5OiBibG9jaztcbn1cblxuYnV0dG9uIHtcbiAgYm9yZGVyLXJhZGl1czogMDtcbiAgYm9yZGVyLXN0eWxlOiBub25lO1xuICBjdXJzb3I6IHBvaW50ZXI7XG59XG5cbmJvZHkge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmZmZmO1xufVxuXG4uY29udGVudC16b25lIHtcbiAgd2lkdGg6IDExNzBweDtcbiAgbWFyZ2luOiAwIGF1dG87XG4gIHBhZGRpbmc6IDAgNDA7XG4gIG1pbi13aWR0aDogMTE3MHB4O1xuICBvdXRsaW5lOiAxcHggc29saWQgYmx1ZTtcbn1cblxuc2VjdGlvbiB7XG4gIG91dGxpbmU6IDFweCBzb2xpZCByZWQ7XG59XG5cbmhlYWRlciB7XG4gIG91dGxpbmU6IDFweCBzb2xpZCBncmVlbjtcbn1cblxuZm9vdGVyIHtcbiAgb3V0bGluZTogMXB4IHNvbGlkIG9yYW5nZTtcbn1cblxuLm1haW4tbWVudV9fbGlzdCB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtd3JhcDogd3JhcDtcbiAganVzdGlmeS1jb250ZW50OiBmbGV4LXN0YXJ0O1xuICBnYXA6IDY1cHg7XG59XG4ubWFpbi1tZW51X19pdGVtIHtcbiAgZm9udC1mYW1pbHk6IFwiUm9ib3RvXCIsIHNhbnMtc2VyaWY7XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG4gIGZvbnQtc2l6ZTogMTRweDtcbiAgbGluZS1oZWlnaHQ6IDIwcHg7XG4gIGxldHRlci1zcGFjaW5nOiAwO1xufVxuLm1haW4tbWVudV9fbGluazpsaW5rLCAubWFpbi1tZW51X19saW5rOnZpc2l0ZWQge1xuICBjb2xvcjogIzU1NTI0ODtcbn1cbi5tYWluLW1lbnVfX2xpbms6aG92ZXIge1xuICBjb2xvcjogI2Q0YjA5ODtcbn1cblxuLnRvb2xiYXIge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LXdyYXA6IHdyYXA7XG4gIGp1c3RpZnktY29udGVudDogZmxleC1zdGFydDtcbiAgZ2FwOiAyMHB4O1xufVxuLnRvb2xiYXJfX2l0ZW0ge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG59XG4udG9vbGJhcl9fbGluazpsaW5rLCAudG9vbGJhcl9fbGluazp2aXNpdGVkIHtcbiAgZmlsbDogIzFiMWExNztcbn1cbi50b29sYmFyX19saW5rOmhvdmVyIHtcbiAgZmlsbDogI2Q0YjA5ODtcbn1cbi50b29sYmFyX19pY29uIHtcbiAgd2lkdGg6IDIwcHg7XG4gIGhlaWdodDogMjBweDtcbn1cbi50b29sYmFyX19jb3VudGVyIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IC0zcHg7XG4gIHJpZ2h0OiAtOHB4O1xuICBmb250LWZhbWlseTogXCJSb2JvdG9cIiwgc2Fucy1zZXJpZjtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgZm9udC1zaXplOiA4cHg7XG4gIGxpbmUtaGVpZ2h0OiAxMXB4O1xuICBsZXR0ZXItc3BhY2luZzogMDtcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGNvbG9yOiAjMWIxYTE3O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZTZjOGI0O1xuICBib3JkZXItcmFkaXVzOiA3cHg7XG4gIGhlaWdodDogMTNweDtcbiAgd2lkdGg6IDEzcHg7XG59XG5cbi5oZWFkZXIge1xuICBkaXNwbGF5OiBmbG93LXJvb3Q7XG59XG4uaGVhZGVyX193cmFwcGVyIHtcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICBtYXJnaW46IDM1cHggMCAzMHB4IDA7XG59XG4uaGVhZGVyX19sb2dvIHtcbiAgd2lkdGg6IDEwMHB4O1xuICBoZWlnaHQ6IDIwcHg7XG59XG4uaGVhZGVyX19sb2dvIGltZyB7XG4gIGRpc3BsYXk6IGJsb2NrO1xufVxuQHN1cHBvcnRzICgtd2Via2l0LWFwcGVhcmFuY2U6bm9uZSl7XG5cbn1cbiIsIi50b29sYmFyIHtcbiAgICBAaW5jbHVkZSBzZXRGbGV4V2l0aEdhcCgyMHB4KTtcblxuICAgICZfX2l0ZW0ge1xuICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgfVxuXG4gICAgJl9fbGluayB7XG4gICAgICAgICY6bGluayxcbiAgICAgICAgJjp2aXNpdGVkIHtcbiAgICAgICAgICAgIGZpbGw6ICRjb2xvcl9tYWluXzkwMDtcbiAgICAgICAgfVxuXG4gICAgICAgICY6aG92ZXIge1xuICAgICAgICAgICAgZmlsbDogJGNvbG9yX3NlY29uZGFyeV9tZWRpdW07XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAmX19pY29uIHtcbiAgICAgICAgd2lkdGg6IDIwcHg7XG4gICAgICAgIGhlaWdodDogMjBweDtcbiAgICB9XG5cbiAgICAmX19jb3VudGVyIHtcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICB0b3A6IC0zcHg7XG4gICAgICAgIHJpZ2h0OiAtOHB4O1xuICAgICAgICBAaW5jbHVkZSBzZXRGb250KFwiUm9ib3RvXCIsIDQwMCwgOHB4LCAxMXB4KTtcbiAgICAgICAgQGluY2x1ZGUgc2V0RmxleENlbnRlcjtcbiAgICAgICAgY29sb3I6ICRjb2xvcl9tYWluXzkwMDtcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJGNvbG9yX3NlY29uZGFyeV9saWdodDtcbiAgICAgICAgYm9yZGVyLXJhZGl1czogN3B4O1xuICAgICAgICBoZWlnaHQ6IDEzcHg7XG4gICAgICAgIHdpZHRoOiAxM3B4O1xuICAgIH1cbn1cbiIsIi5oZWFkZXIge1xuICAgIGRpc3BsYXk6IGZsb3ctcm9vdDtcblxuICAgICZfX3dyYXBwZXIge1xuICAgICAgICBAaW5jbHVkZSBzZXRGbGV4U3BhY2VCZXR3ZWVuO1xuICAgICAgICBtYXJnaW46IDM1cHggMCAzMHB4IDA7XG4gICAgfVxuXG4gICAgJl9fbG9nbyB7XG4gICAgICAgIHdpZHRoOiAxMDBweDtcbiAgICAgICAgaGVpZ2h0OiAyMHB4O1xuXG4gICAgICAgIGltZyB7XG4gICAgICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgICAgfVxuICAgIH1cbn1cbiJdfQ== */