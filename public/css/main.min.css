*{padding:0;margin:0}html{-webkit-box-sizing:border-box;box-sizing:border-box}a{color:inherit;text-decoration:none}ul{list-style:none}button{border-radius:0;border-style:none;cursor:pointer}body{background:#fff}.content-zone{width:1170px;margin:0 auto;padding:0 40;min-width:1170px;outline:1px solid #00f}section{outline:1px solid red}header{outline:1px solid green}footer{outline:1px solid orange}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9yZXNldC5zY3NzIiwibWFpbi5taW4uY3NzIiwiX2dsb2JhbC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLEMsQ0FDSSxTLENBQ0EsUSxDQUdKLEksQ0FDSSw2QixDQ0NGLHFCLENERUYsQyxDQUNJLGEsQ0FDQSxvQixDQUdKLEUsQ0FDSSxlLENBR0osTSxDQUNJLGUsQ0FDQSxpQixDQUNBLGMsQ0VyQkosSSxDQUNJLGUsQ0FHSixhLENBQ0ksWSxDQUNBLGEsQ0FDQSxZLENBQ0EsZ0IsQ0FDQSxzQixDQUtKLE8sQ0FDSSxxQixDQUdKLE0sQ0FDSSx1QixDQUdKLE0sQ0FDSSx3QiIsImZpbGUiOiJtYWluLm1pbi5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIqIHtcbiAgICBwYWRkaW5nOiAwO1xuICAgIG1hcmdpbjogMDtcbn1cblxuaHRtbCB7XG4gICAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbn1cblxuYSB7XG4gICAgY29sb3I6IGluaGVyaXQ7XG4gICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xufVxuXG51bCB7XG4gICAgbGlzdC1zdHlsZS10eXBlOiBub25lXG59XG5cbmJ1dHRvbiB7XG4gICAgYm9yZGVyLXJhZGl1czogMDtcbiAgICBib3JkZXItc3R5bGU6IG5vbmU7XG4gICAgY3Vyc29yOiBwb2ludGVyO1xufSIsIioge1xuICBwYWRkaW5nOiAwO1xuICBtYXJnaW46IDA7XG59XG5cbmh0bWwge1xuICAtd2Via2l0LWJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG59XG5cbmEge1xuICBjb2xvcjogaW5oZXJpdDtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xufVxuXG51bCB7XG4gIGxpc3Qtc3R5bGU6IG5vbmU7XG59XG5cbmJ1dHRvbiB7XG4gIGJvcmRlci1yYWRpdXM6IDA7XG4gIGJvcmRlci1zdHlsZTogbm9uZTtcbiAgY3Vyc29yOiBwb2ludGVyO1xufVxuXG5ib2R5IHtcbiAgYmFja2dyb3VuZDogI2ZmZmZmZjtcbn1cblxuLmNvbnRlbnQtem9uZSB7XG4gIHdpZHRoOiAxMTcwcHg7XG4gIG1hcmdpbjogMCBhdXRvO1xuICBwYWRkaW5nOiAwIDQwO1xuICBtaW4td2lkdGg6IDExNzBweDtcbiAgb3V0bGluZTogMXB4IHNvbGlkIGJsdWU7XG59XG5cbnNlY3Rpb24ge1xuICBvdXRsaW5lOiAxcHggc29saWQgcmVkO1xufVxuXG5oZWFkZXIge1xuICBvdXRsaW5lOiAxcHggc29saWQgZ3JlZW47XG59XG5cbmZvb3RlciB7XG4gIG91dGxpbmU6IDFweCBzb2xpZCBvcmFuZ2U7XG59XG5cbkBzdXBwb3J0cyAoLXdlYmtpdC1hcHBlYXJhbmNlOm5vbmUpIHtcblxufVxuLyojIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0p6YjNWeVkyVnpJanBiSWw5eVpYTmxkQzV6WTNOeklpd2liV0ZwYmk1amMzTWlMQ0pmWjJ4dlltRnNMbk5qYzNNaUxDSmZkbUZ5YVdGaWJHVnpMbk5qYzNNaVhTd2libUZ0WlhNaU9sdGRMQ0p0WVhCd2FXNW5jeUk2SWtGQlFVRTdSVUZEU1N4VlFVRkJPMFZCUTBFc1UwRkJRVHRCUTBOS096dEJSRVZCTzBWQlEwa3NPRUpCUVVFN1ZVRkJRU3h6UWtGQlFUdEJRME5LT3p0QlJFVkJPMFZCUTBrc1kwRkJRVHRGUVVOQkxIRkNRVUZCTzBGRFEwbzdPMEZFUlVFN1JVRkRTU3h4UWtGQlFUdEJRME5LT3p0QlJFVkJPMFZCUTBrc1owSkJRVUU3UlVGRFFTeHJRa0ZCUVR0RlFVTkJMR1ZCUVVFN1FVTkRTanM3UVVOMFFrRTdSVUZEU1N4NVFrTlhWVHRCUm1Oa096dEJRM1JDUVR0RlFVTkpMR0ZETUVOWE8wVkVla05ZTEdOQlFVRTdSVUZEUVN4aFFVRkJPMFZCUTBFc2FVSkRkVU5YTzBWRWRFTllMSFZDUVVGQk8wRkVlVUpLT3p0QlEzQkNRVHRGUVVOSkxITkNRVUZCTzBGRWRVSktPenRCUTNCQ1FUdEZRVU5KTEhkQ1FVRkJPMEZFZFVKS096dEJRM0JDUVR0RlFVTkpMSGxDUVVGQk8wRkVkVUpLTzBGQlEwRTdPMEZCUlVFaUxDSm1hV3hsSWpvaWJXRnBiaTVqYzNNaUxDSnpiM1Z5WTJWelEyOXVkR1Z1ZENJNld5SXFJSHRjYmlBZ0lDQndZV1JrYVc1bk9pQXdPMXh1SUNBZ0lHMWhjbWRwYmpvZ01EdGNibjFjYmx4dWFIUnRiQ0I3WEc0Z0lDQWdZbTk0TFhOcGVtbHVaem9nWW05eVpHVnlMV0p2ZUR0Y2JuMWNibHh1WVNCN1hHNGdJQ0FnWTI5c2IzSTZJR2x1YUdWeWFYUTdYRzRnSUNBZ2RHVjRkQzFrWldOdmNtRjBhVzl1T2lCdWIyNWxPMXh1ZlZ4dVhHNTFiQ0I3WEc0Z0lDQWdiR2x6ZEMxemRIbHNaUzEwZVhCbE9pQnViMjVsWEc1OVhHNWNibUoxZEhSdmJpQjdYRzRnSUNBZ1ltOXlaR1Z5TFhKaFpHbDFjem9nTUR0Y2JpQWdJQ0JpYjNKa1pYSXRjM1I1YkdVNklHNXZibVU3WEc0Z0lDQWdZM1Z5YzI5eU9pQndiMmx1ZEdWeU8xeHVmU0lzSWlvZ2UxeHVJQ0J3WVdSa2FXNW5PaUF3TzF4dUlDQnRZWEpuYVc0NklEQTdYRzU5WEc1Y2JtaDBiV3dnZTF4dUlDQmliM2d0YzJsNmFXNW5PaUJpYjNKa1pYSXRZbTk0TzF4dWZWeHVYRzVoSUh0Y2JpQWdZMjlzYjNJNklHbHVhR1Z5YVhRN1hHNGdJSFJsZUhRdFpHVmpiM0poZEdsdmJqb2dibTl1WlR0Y2JuMWNibHh1ZFd3Z2UxeHVJQ0JzYVhOMExYTjBlV3hsTFhSNWNHVTZJRzV2Ym1VN1hHNTlYRzVjYm1KMWRIUnZiaUI3WEc0Z0lHSnZjbVJsY2kxeVlXUnBkWE02SURBN1hHNGdJR0p2Y21SbGNpMXpkSGxzWlRvZ2JtOXVaVHRjYmlBZ1kzVnljMjl5T2lCd2IybHVkR1Z5TzF4dWZWeHVYRzVpYjJSNUlIdGNiaUFnWW1GamEyZHliM1Z1WkMxamIyeHZjam9nSTJabVptWm1aanRjYm4xY2JseHVMbU52Ym5SbGJuUXRlbTl1WlNCN1hHNGdJSGRwWkhSb09pQXhNVGN3Y0hnN1hHNGdJRzFoY21kcGJqb2dNQ0JoZFhSdk8xeHVJQ0J3WVdSa2FXNW5PaUF3SURRd08xeHVJQ0J0YVc0dGQybGtkR2c2SURFeE56QndlRHRjYmlBZ2IzVjBiR2x1WlRvZ01YQjRJSE52Ykdsa0lHSnNkV1U3WEc1OVhHNWNibk5sWTNScGIyNGdlMXh1SUNCdmRYUnNhVzVsT2lBeGNIZ2djMjlzYVdRZ2NtVmtPMXh1ZlZ4dVhHNW9aV0ZrWlhJZ2UxeHVJQ0J2ZFhSc2FXNWxPaUF4Y0hnZ2MyOXNhV1FnWjNKbFpXNDdYRzU5WEc1Y2JtWnZiM1JsY2lCN1hHNGdJRzkxZEd4cGJtVTZJREZ3ZUNCemIyeHBaQ0J2Y21GdVoyVTdYRzU5WEc1QWMzVndjRzl5ZEhNZ0tDMTNaV0pyYVhRdFlYQndaV0Z5WVc1alpUcHViMjVsS1h0Y2JseHVmVnh1SWl3aVltOWtlU0I3WEc0Z0lDQWdZbUZqYTJkeWIzVnVaQzFqYjJ4dmNqb2dKR052Ykc5eVgzZG9hWFJsTzF4dWZWeHVYRzR1WTI5dWRHVnVkQzE2YjI1bElIdGNiaUFnSUNCM2FXUjBhRG9nSkhOcGVtVmZZMjl1ZEdWdWREdGNiaUFnSUNCdFlYSm5hVzQ2SURBZ1lYVjBienRjYmlBZ0lDQndZV1JrYVc1bk9pQXdJRFF3TzF4dUlDQWdJRzFwYmkxM2FXUjBhRG9nSkhOcGVtVmZZMjl1ZEdWdWREdGNiaUFnSUNCdmRYUnNhVzVsT2lBeGNIZ2djMjlzYVdRZ1lteDFaVHRjYm4xY2JseHVMeThnWkdWMklHOXViSGxjYmx4dWMyVmpkR2x2YmlCN1hHNGdJQ0FnYjNWMGJHbHVaVG9nTVhCNElITnZiR2xrSUhKbFpEdGNibjFjYmx4dWFHVmhaR1Z5SUh0Y2JpQWdJQ0J2ZFhSc2FXNWxPaUF4Y0hnZ2MyOXNhV1FnWjNKbFpXNDdYRzU5WEc1Y2JtWnZiM1JsY2lCN1hHNGdJQ0FnYjNWMGJHbHVaVG9nTVhCNElITnZiR2xrSUc5eVlXNW5aVHRjYm4waUxDSXZMeUJ3Y21sdFlYSjVJR052Ykc5eUlITm9ZV1JsYzF4dVhHNGtZMjlzYjNKZmJXRnBibDg1TURBNklDTXhZakZoTVRjN1hHNGtZMjlzYjNKZmJXRnBibDg0TURBNklDTXlOakkwTWpFN1hHNGtZMjlzYjNKZmJXRnBibDgzTURBNklDTTBORFF5TkRBN1hHNGtZMjlzYjNKZmJXRnBibDgyTURBNklDTTFOVFV5TkRnN1hHNGtZMjlzYjNKZmJXRnBibDgxTURBNklDTTFZelZqTlRBN1hHNGtZMjlzYjNKZmJXRnBibDgwTURBNklDTTRZamd6TnpFN1hHNGtZMjlzYjNKZmJXRnBibDh6TURBNklDTmpOR013WWpZN1hHNGtZMjlzYjNKZmJXRnBibDh5TURBNklDTm1OMlkxWldZN1hHNGtZMjlzYjNKZmJXRnBibDh4TURBNklDTm1aR1prWm1JN1hHNWNiaVJqYjJ4dmNsOTNhR2wwWlRvZ0kyWm1abVptWmp0Y2JseHVMeThnYzJWamIyNWtZWEo1SUdOdmJHOXljMXh1WEc0a1kyOXNiM0pmYzJWamIyNWtZWEo1WDJ4cFoyaDBPaUFqWlRaak9HSTBPMXh1SkdOdmJHOXlYM05sWTI5dVpHRnllVjl0WldScGRXMDZJQ05rTkdJd09UZzdYRzVjYmk4dklHZHlZV1JwWlc1MGMxeHVYRzRrWjNKaFpHbGxiblJmWTJseVkyeGxjMTh4T2lCc2FXNWxZWEl0WjNKaFpHbGxiblFvWEc0Z0lDQWdPRGt1TmpOa1pXY3NYRzRnSUNBZ0kyUTBZakE1T0NBd0xqTWxMRnh1SUNBZ0lISm5ZbUVvTWpFeUxDQXhOellzSURFMU1pd2dNQ2tnT1RrdU5qY2xYRzRwTzF4dVhHNGtaM0poWkdsbGJuUmZZMmx5WTJ4bGMxOHlPaUJzYVc1bFlYSXRaM0poWkdsbGJuUW9YRzRnSUNBZ09Ea3VOak5rWldjc1hHNGdJQ0FnSTJVeVpEQmpOQ0F3TGpNbExGeHVJQ0FnSUhKblltRW9NakkyTENBeU1EZ3NJREU1Tml3Z01Da2dPVGt1TmpjbFhHNHBPMXh1WEc0a1ozSmhaR2xsYm5SZlkybHlZMnhsYzE4ek9pQnNhVzVsWVhJdFozSmhaR2xsYm5Rb1hHNGdJQ0FnT0RrdU5qTmtaV2NzWEc0Z0lDQWdJMlU1WlROa05DQXdMak1sTEZ4dUlDQWdJSEpuWW1Fb01qSTJMQ0F5TURnc0lERTVOaXdnTUNrZ09Ua3VOamNsWEc0cE8xeHVYRzRrWjNKaFpHbGxiblJmYUdWeWIxOWlZV05yWjNKdmRXNWtPaUJzYVc1bFlYSXRaM0poWkdsbGJuUW9YRzRnSUNBZ01UZ3daR1ZuTEZ4dUlDQWdJSEpuWW1Fb01qTTBMQ0F5TWpjc0lESXhNaXdnTUNrZ01DVXNYRzRnSUNBZ0kyVmhaVE5rTkNBeE1EQWxYRzRwTzF4dVhHNHZMeUJ6YVhwbGMxeHVYRzRrYzJsNlpWOWpiMjUwWlc1ME9pQXhNVGN3Y0hnN1hHNGlYWDA9ICovIiwiYm9keSB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogJGNvbG9yX3doaXRlO1xufVxuXG4uY29udGVudC16b25lIHtcbiAgICB3aWR0aDogJHNpemVfY29udGVudDtcbiAgICBtYXJnaW46IDAgYXV0bztcbiAgICBwYWRkaW5nOiAwIDQwO1xuICAgIG1pbi13aWR0aDogJHNpemVfY29udGVudDtcbiAgICBvdXRsaW5lOiAxcHggc29saWQgYmx1ZTtcbn1cblxuLy8gZGV2IG9ubHlcblxuc2VjdGlvbiB7XG4gICAgb3V0bGluZTogMXB4IHNvbGlkIHJlZDtcbn1cblxuaGVhZGVyIHtcbiAgICBvdXRsaW5lOiAxcHggc29saWQgZ3JlZW47XG59XG5cbmZvb3RlciB7XG4gICAgb3V0bGluZTogMXB4IHNvbGlkIG9yYW5nZTtcbn0iXX0= */