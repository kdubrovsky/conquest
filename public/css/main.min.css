*{padding:0;margin:0}html{-webkit-box-sizing:border-box;box-sizing:border-box}a{color:inherit;text-decoration:none}ul{list-style:none}.header__logo img,svg{display:block}button{border-radius:0;border-style:none;cursor:pointer}body{background:#fff}.content-zone{width:1170px;margin:0 auto;padding:0 40px;min-width:1170px;outline:1px solid #00f}section{outline:1px solid red}header{outline:1px solid green}footer{outline:1px solid orange}.main-menu__list{display:-webkit-box;display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;-webkit-box-pack:start;-ms-flex-pack:start;justify-content:flex-start;gap:65px}.main-menu__item{font:400 14px/20px "Roboto",sans-serif;letter-spacing:0}.main-menu__link:link,.main-menu__link:visited{color:#555248}.main-menu__link:hover{color:#d4b098}.toolbar{display:-webkit-box;display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;-webkit-box-pack:start;-ms-flex-pack:start;justify-content:flex-start;gap:20px}.toolbar__item{position:relative}.toolbar__link:link,.toolbar__link:visited{fill:#1b1a17}.toolbar__link:hover{fill:#d4b098}.toolbar__icon{width:20px;height:20px}.toolbar__counter{font:400 8px/11px "Roboto",sans-serif;background:#e6c8b4;position:absolute;top:-3px;right:-8px;letter-spacing:0;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;color:#1b1a17;border-radius:7px;height:13px;width:13px}.header{display:flow-root}.header__wrapper{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;margin:35px 0 30px}.header__logo{width:100px;height:20px}.hero{background:#fdfdfb;display:flow-root}.hero__wrapper{display:grid}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */